.de EX		\"Begin example
.ne 5
.if n .sp 1
.if t .sp .5
.nf
.in +.5i
..
.de EE
.fi
.in -.5i
.if n .sp 1
.if t .sp .5
..
.ta .3i .6i .9i 1.2i 1.5i 1.8i
.TH CTWM 1 "Release 5" "X Version 11"
.SH NAME
ctwm - Claude's twm for the X Window System
.SH SYNTAX
.PP
\fBctwm \fP[-display \fIdpy\fP] [-s] [-f \fIinitfile\fP] [-v]
.PP
.SH DESCRIPTION
.PP
\fICtwm\fP is a window manager for the X Window System. It is actually
twm (Tab Window Manager) from the MIT X11 distribution slightly modified
to accomodate the use of several virtual screens (workspaces). It is 
heavily inspired from the Hewlett-Packard vuewm window manager.
.PP
.SH OPTIONS
.PP
\fICtwm\fP accepts all the \fITwm\fP command line options.
.PP
.SH CUSTOMIZATION
.PP
Same as \fItwm\fP, except for the user customization is read from :
.TP 8
.B "/usr/lib/X11/twm/system.ctwmrc"
.PP
   or
.PP 
.B "$HOME/.ctwmrc.\fIscreennumber\fP"
.PP
   or
.PP 
.B "$HOME/.ctwmrc"
.PP
   or if nothing of these exists :
.PP 
.B "$HOME/.twmrc"
.PP
.SH VARIABLES
.PP
All the variables of \fItwm\fP, plus some :
.PP

.IP "\fBAutoOccupy\fP" 4
This variable specifies that clients will change automatically their occupation
when their name or icon name changes. The new occupation will be recalculated
from the Occupy and OccupyAll fields in the .ctwmrc file.

.IP "\fBAutoRaise\fP [{ \fIwin-list\fP }]" 4
This variable specifies a list of windows
(all windows if the list is defaulted)
to be automatically
raised whenever the pointer has come to rest in a window for the amount of
time specified by the \fBRaiseDelay\fP variable.
This action can be interactively
enabled or disabled on individual windows using the function \fBf.autoraise\fP.

.IP "\fBDontPaintRootWindow\fP" 4
This variable tells ctwm not to paint the root window, whatever you told in
the Workspaces specification. This is useful to have pixmaps in the Workspace Map
but not on the root window.

.IP "\fBMapWindowBackground\fP \fBcolor\fP [{ \fBwin-list\fP }]" 4
This variable specifies the background colors to use for small windows in the 
workspace map window and may only be specified inside of a Color or Monochrome
list. The  optional \fBwin-list\fP is a list of window names and colors so
that per-window colors may be  specified.

.IP "\fBMapWindowCurrentWorkSpace\fP { \fBborder_color\fP \fBbackground\fP \fBforeground\fP \fBbitmap\fP }" 4
Specify the appearence of the map window corresponding to the current workspace.

.IP "\fBMapWindowDefaultWorkSpace\fP { \fBborder_color\fP \fBbackground\fP \fBforeground\fP \fBbitmap\fP }" 4
Specify the appearence of the map window corresponding to the workspaces different
from the current workspace if no root background infos have been given to ctwm in
the WorkSpace command. Not used in others cases.

.IP "\fBMapWindowForeground\fP \fBcolor\fP [{ \fBwin-list\fP }]" 4
This variable specifies the foreground colors to use for small windows in the 
workspace map window and may only be specified inside of a Color or Monochrome
list. The  optional \fBwin-list\fP is a list of window names and colors so
that per-window colors may be specified.

.IP "\fBNoShowOccupyAll\fP" 4
This variable specifies that OccupyAll windows won't be displayed in the
WorkSpaceMap window.

.IP "\fBOccupy\fP { \fIoccupy-list\fP }" 4
This variable specifies which window occupy which workspace at startup.
.IP
Where \fIoccupy-list\fP is a list entries of the form :
.EX
	[Window]   win-name { wpsc1 wspc2 ... }
or	Workspace  wspc-name {win1 win2 ... }
.EE
Example :
.EX
Occupy {
               "xload"   {"all"}
    Window     "xterm"   {"here" "there" "elsewhere"}
               "xv"      {"images"}
    WorkSpace  "images"  {"xloadimage"}
}
.EE

.IP "\fBOccupyAll\fP { \fIwindow-list\fP }" 4
.PP
This variable specifies a list of windows that will occupy all workspaces at startup.
.IP
Where \fIwindow-list\fP is a list of window names.
.IP
Example :
.EX
OccupyAll
{
    "xload"
    "xbiff"
    "xconsole"
}
.EE

.IP "\fBOpaqueResize\fP" 4
Just for fun. The opaque version of resize. Extremely resource intensive,
but beautiful with fast server/client/network.

.IP "\fBPixmapDirectory\fP \fIpath\fP " 4
Ctwm handles colored, shaped icons and background root pixmaps in XPM format
[from Arnaud LE HORS] and any format understood by the imconv package [from
the San Diego Supercomputer Center]. This variable specifies the path where
ctwm looks for to find the files containing these pixmaps. Whenever you want
to use one of these formats, specify : xpm:filename or im:filename.
Example :
.EX
PixmapDirectory  "/usr/lib/X11/twm"
Icons
{
    "Axe"    "xpm:edit.xpm"
    "xterm"  "xpm:term.xpm"
}
.EE
N.B This is only valid if your version of ctwm has been compiled with the
XPM and IMCONV options.

.IP "\fBRaiseDelay\fP \fImilliseconds\fP" 4
For windows that are to be automatically raised when the pointer enters
(see the \fBAutoRaise\fP variable and the \fIf.autoraise\fP function)
this variable specifies the length of time the pointer should rest in
the window before it is raised.  The default is 0 milliseconds.

.IP "\fBShowWorkSpaceManager\fP" 4
This variable specifies that the WorkSpaceManager should be visible.

.IP "\fBStartInMapState\fP" 4
This variable specifies that the WorkSpaceManager should be started
in its map form when created.

.IP "\fBTransientHasOccupation\fP" 4
This variable specifies that transient-for and non group leader windows
can have their own occupation potentially different from their leader
window. The default case is that these windows follows their leader, use
this keyword if it doesn't please you.

.IP "\fBWorkSpaceManagerGeometry\fP \fIstring\fP [ \fIcolumns\fP ]" 4
This variable specifies the geometry of the workspace manager window. The 
\fIstring\fP argument is standard geometry specification that indicates 
the initial full size of the workspace manager. The \fIcolumns\fP argument
indicates the number of columns to use for the workspace manager window.
.EX
\fBWorkSpaceManagerGeometry\fP        "360x60+60-0" 4
.EE
.IP "\fBWorkSpaces\fP { \fIworkspace-list\fP }" 4
This variable specifies a list of workspaces that are created at startup.
Where \fIworkspace-list\fP is :
.EX
name [{bg-button [fg-button] [bg-root] [fg-root] [bitmap-root]}]
.EE
.IP
With :
.RS 8
.TP 4
.B "bg-button:"
background color of the corresponding button in the workspace manager.
.TP 8
.B "fg-button:"
foreground color of the corresponding button in the workspace manager.
.TP 8
.B "bg-root:"
background color of the corresponding root screen.
.TP 8
.B "fg-root:"
foreground color of the corresponding root screen.
.TP 8
.B "bitmap-root:"
bitmap to display on the corresponding root screen.
.RE
.IP
Example :
.EX
WorkSpaces
{
  "One"   {"#686B9F" "white" "DeepSkyBlue3" "white" "xlogo16"}
  "Two"   {"#619AAE" "white" "firebrick"}
  "Three" {"#727786" "white" "brown"}
  "Four"  {"#8C5b7A" "white" "MidnightBlue"}

  "Five"  {"#727786" "white" "DeepSkyBlue3" "white" "plaid"}
  "Six"   {"#619AAE" "white" "DeepSkyBlue3" "white" "letters"}
  "Seven" {"#8C5b7A" "white" "chartreuse4"}
  "Eight" {"#686B9F" "white" "MidnightBlue"}
}
.EE
.IP
The maximum number of workspaces is 32.

.SH FUNCTIONS
.PP
All the functions of \fItwm\fP, plus some :

.PP

.IP "\fBf.gotoworkspace\fP \fBworkspace_name\fP" 4
This function warps you to the workspace whose name is \fBworkspace_name\fP

.IP "\fBf.hideworkspacemgr\fP" 4
Unmap the WorkSpace manager.

.IP "\fBf.nextworkspace\fP" 4
Goto the next workspace in the list, using the order given in the .ctwmrc file.

.IP "\fBf.occupy\fP" 4
This function pops up a window for the user to choose which workspaces a window
belongs to.

.IP "\fBf.occupyall\fP" 4
This function makes the specified window occupy all the workspaces.

.IP "\fBf.prevworkspace\fP" 4
Goto the previous workspace in the list, using the order given in the .ctwmrc file.

.IP "\fBf.setbuttonsstate\fP" 4
Set the WorkSpace manager in button state.

.IP "\fBf.pin\fP" 4
Valid only in a root menu. Make a menu permanent on the screen. This is a toggle
function, if you select it while the menu is already permanent, it becomes
non-permanent.

.IP "\fBf.setmapstate\fP" 4
Set the WorkSpace manager in map state.

.IP "\fBf.showworkspacemgr\fP" 4
Map the WorkSpace manager.

.IP "\fBf.togglestate\fP" 4
Toggle the state of the WorkSpace manager.

.IP "\fBf.vanish\fP" 4
The specified window vanish from the current workspace if it occupies at least
one other WorkSpace. Do nothing in the others cases.

.IP "\fBf.warphere\fP \fBwin_name\fP" 4
This function adds the window which has a name or class that matches string
to the current workspace and warps the pointer to it. If the window is iconified,
it will be deiconified if the variable WarpUnmapped is set or else ignored.

.PP

.SH FILES
.PP
.nf
 $HOME/.ctwmrc.<screen number>
 $HOME/.ctwmrc
 /usr/lib/X11/twm/system.ctwmrc
 $HOME/.twmrc

.SH "SEE ALSO"
.PP
X(1), Xserver(1), xdm(1), xrdb(1) twm (1)
.SH COPYRIGHT
Portions copyright 1988 Evans & Sutherland Computer Corporation; portions
copyright 1989 Hewlett-Packard Company and the Massachusetts Institute of
Technology,  See \fIX(1)\fP for a full statement of rights and permissions.
.SH AUTHORS
Tom LaStrange, Solbourne Computer; Jim Fulton, MIT X Consortium;
Steve Pitschke, Stardent Computer; Keith Packard, MIT X Consortium;
Dave Sternlicht, MIT X Consortium; Dave Payne, Apple Computer.
Claude Lecommandeur, Swiss Polytechnical Institute of Lausanne (lecom@sic.epfl.ch).
